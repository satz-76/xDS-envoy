package main

import (
	"fmt"
	"io/ioutil"
	"time"
)

func monitorFile(filepath string, interval time.Duration, notify chan<- struct{}) {
	var previousContent []byte

	for {
		content, err := ioutil.ReadFile(filepath)
		if err != nil {
			fmt.Printf("Error reading file: %s\n", err.Error())
			continue
		}

		if !bytesEqual(previousContent, content) {
			notify <- struct{}{}
		}

		previousContent = content

		time.Sleep(interval)
	}
}

func bytesEqual(a, b []byte) bool {
	if len(a) != len(b) {
		return false
	}

	for i := range a {
		if a[i] != b[i] {
			return false
		}
	}

	return true
}

func main() {
	filepath := "/path/to/file.yaml"
	pollInterval := time.Second * 5 // Poll every 5 seconds

	notify := make(chan struct{})

	go monitorFile(filepath, pollInterval, notify)

	// Perform other operations or start additional goroutines here

	for {
		<-notify
		fmt.Println("File change detected. Performing certain action.")
		// Perform the desired action here
	}
}
